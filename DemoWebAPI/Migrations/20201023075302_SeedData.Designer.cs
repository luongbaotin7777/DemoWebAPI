// <auto-generated />
using DemoWebAPI.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DemoWebAPI.Migrations
{
    [DbContext(typeof(DemoWebContext))]
    [Migration("20201023075302_SeedData")]
    partial class SeedData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DemoWebAPI.Models.Categories", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Name = "Iphone"
                        },
                        new
                        {
                            Id = 2L,
                            Name = "SamSung"
                        },
                        new
                        {
                            Id = 3L,
                            Name = "LG"
                        });
                });

            modelBuilder.Entity("DemoWebAPI.Models.ProductInCategory", b =>
                {
                    b.Property<long>("CategoryId")
                        .HasColumnType("bigint");

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint");

                    b.HasKey("CategoryId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductInCategory");
                });

            modelBuilder.Entity("DemoWebAPI.Models.Products", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Description = "Iphone 7Plus 64Gb, new Model in Years",
                            Name = "Iphone 7Plus",
                            Price = 7000000f
                        },
                        new
                        {
                            Id = 2L,
                            Description = "Iphone 8Plus 64Gb, new Model in Years",
                            Name = "Iphone 8Plus",
                            Price = 15000000f
                        },
                        new
                        {
                            Id = 3L,
                            Description = "SamSung Note10 256GB, new Model in Years",
                            Name = "SamSung Note10",
                            Price = 10000000f
                        },
                        new
                        {
                            Id = 4L,
                            Description = "SamSung Note9 64Gb, new Model in Years",
                            Name = "SamSung Note9",
                            Price = 9000000f
                        },
                        new
                        {
                            Id = 5L,
                            Description = "LG ABCD G15 64Gb, new Model in Years",
                            Name = "LG ABCD G15",
                            Price = 11000000f
                        });
                });

            modelBuilder.Entity("DemoWebAPI.Models.ProductInCategory", b =>
                {
                    b.HasOne("DemoWebAPI.Models.Categories", "Category")
                        .WithMany("ProductInCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DemoWebAPI.Models.Products", "Product")
                        .WithMany("ProductInCategories")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
